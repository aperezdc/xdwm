.\" Man page generated from reStructeredText.
.
.TH XDWM-SESSION 1 "" "" ""
.SH NAME
xdwm-session \- Start XDWM and additional services
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBxdwm\-session\fP
.SH DESCRIPTION
.sp
The \fBxdwm\-session\fP program starts up the XDWM window manager and some
additional convenience services, some of which may be defined by the user.
This command is typically executed by your login manager (either gdm, xdm,
slim...) or from your X startup scripts.
.sp
Actually \fBxdwm\-session\fP is \fInot\fP a full X11R6\-compliant session manager,
but a convenience script to launch additional services and provide a clean
environment to \fIxdwm(1)\fP. Therefore, it \fIwill not\fP manage XSM\-compliant
applications despite its name.
.SH ENVIRONMENT
.sp
\fBxdwm\-session\fP sets a number f environment variables for the use of its
child processes:
.sp
\fBBROWSER\fP
.INDENT 0.0
.INDENT 3.5
If not already defined, \fBxdwm\-session\fP will try to set it to a
reasonable default value. If no usable browser is detected, the
variable will be left unset.
.UNINDENT
.UNINDENT
.sp
\fBXDWM_DIR\fP
.INDENT 0.0
.INDENT 3.5
Path to a directory (usually inside the user\(aqs home directory) in
which to store transient information related to the session being
run.
.sp
This directory is used to save the PID files of the services started
by \fBxdwm\-session\fP, sockets and FIFOs used by them. A subdirectory
called \fBlog/\fP inside it stores the session log.
.UNINDENT
.UNINDENT
.sp
\fBDISPLAY\fP
.INDENT 0.0
.INDENT 3.5
The X display being managed.
.UNINDENT
.UNINDENT
.sp
When sourcing the \fBrc\fP file (see \fI\%FILES\fP below), it is guaranteed that
the \fIbash(1)\fP shell will be used, so its additional features can (and
should!) be used. Plus, the following are available to use:
.sp
\fBservice()\fP
.INDENT 0.0
.INDENT 3.5
Function that uses \fIdmon(8)\fP to launch and monitor a service. It will
save a PID file under \fB$XDWM_DIR\fP, and connect the output of the
process to XDWM\(aqs logging FIFO (see \fI\%FILES\fP below). All services started
using this function will be shut down when the session finishes. The
arguments to the function should be the application to launch and its
command line options, \fIincluding the ones needed to avoid forking\fP
(remember that \fIdmon(8)\fP handles the forking itself). For example:
.sp
.nf
.ft C
service /usr/lib/gnome\-settings\-daemon/gnome\-settings\-daemon
service gnome\-screensaver \-\-no\-daemon
.ft P
.fi
.sp
Note that, if you need to pass options to \fIdmon(8)\fP, it is possible
but you will need to define the service name in the \fBS\fP variable. For
example, this will run a task in 10\-minute intervals:
.sp
.nf
.ft C
S=cronjob\-like\-script service \-\-interval 10m cronjob\-like\-script
.ft P
.fi
.sp
It is even possible to use a service name different from the executable
program name, passing the \fBX\fP variable for the executable name. For
example \fBxdwm\-session\fP itself sets up a clock to be shown in the top
bar like this:
.sp
.nf
.ft C
S=dwm\-status X=sh service \-\-interval 30 \e
  sh \-c \(aqxsetroot \-name "$(date +%H:%S)"\(aq
.ft P
.fi
.sp
Note that \fIservice()\fP will skip starting services for which the
executable program does not exist, thus the need for \fBX\fP.
.UNINDENT
.UNINDENT
.SH FILES
.sp
\fB$XDG_CONFIG_DIR/config/xdwm/rc\fP
.INDENT 0.0
.INDENT 3.5
Shell script sourced by \fBxdwm\-session\fP in which the user may define
extra services to start or environment variables. See the \fI\%ENVIRONMENT\fP
for a description of functions and variables useable from this file.
.UNINDENT
.UNINDENT
.sp
\fB$XDWM_DIR/log/*\fP
.INDENT 0.0
.INDENT 3.5
Session log. Logs are saved using \fIdrlog(8)\fP and rotated automatically
so it is not needed to take care of deleting old ones.
.UNINDENT
.UNINDENT
.sp
\fB$XDWM_DIR/log.fifo\fP
.INDENT 0.0
.INDENT 3.5
FIFO which can be used to send messages to the session log.
.UNINDENT
.UNINDENT
.SH SEE ALSO
.sp
\fIdlog(8)\fP, \fIdrlog(8)\fP, \fIdmon(8)\fP
.SH AUTHOR
Adrian Perez <aperez@igalia.com>
.\" Generated by docutils manpage writer.
.\" 
.
